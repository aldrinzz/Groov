{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 AppleColorEmoji;
}
{\colortbl;\red255\green255\blue255;\red252\green95\blue163;\red31\green31\blue36;\red255\green255\blue255;
\red93\green216\blue255;\red208\green168\blue255;\red208\green168\blue255;\red65\green161\blue192;\red161\green103\blue230;
\red103\green183\blue164;\red161\green103\blue230;\red252\green106\blue93;\red103\green183\blue164;\red208\green191\blue105;
}
{\*\expandedcolortbl;;\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c12054\c12284\c14131;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c36295\c84643\c99897;\csgenericrgb\c81569\c65882\c100000;\csgenericrgb\c81681\c65692\c99927;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c63137\c40392\c90196;
\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c98912\c41558\c36568;\csgenericrgb\c40392\c71765\c64314;\csgenericrgb\c81498\c74939\c41233;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\b\fs24 \cf2 \cb3 import
\f1\b0 \cf4  CoreBluetooth\

\f0\b \cf2 import
\f1\b0 \cf4  SwiftUI\

\f0\b \cf2 import
\f1\b0 \cf4  AVFoundation\
\

\f0\b \cf2 class
\f1\b0 \cf4  \cf5 BluetoothManager\cf4 : \cf6 NSObject\cf4 , \cf7 ObservableObject\cf4 , \cf6 CBCentralManagerDelegate\cf4 , \cf6 CBPeripheralDelegate\cf4  \{\
    \cf7 @Published\cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 discoveredPeripherals\cf4 : [\cf6 CBPeripheral\cf4 ] = []\
    \cf7 @Published\cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 isConnected\cf4 : \cf7 Bool\cf4  = 
\f0\b \cf2 false
\f1\b0 \cf4 \
    
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 connectedPeripherals\cf4 : [\cf6 CBPeripheral\cf4 ] = []\
\
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 centralManager\cf4 : \cf6 CBCentralManager\cf4 !\
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 pianoCharacteristics\cf4 : [\cf6 CBPeripheral\cf4 : \cf6 CBCharacteristic\cf4 ] = [:]\
    \
    
\f0\b \cf2 var
\f1\b0 \cf4  \cf8 audioPlayer\cf4 : \cf6 AVAudioPlayer\cf4 ?\
\
    
\f0\b \cf2 override
\f1\b0 \cf4  
\f0\b \cf2 init
\f1\b0 \cf4 () \{\
        
\f0\b \cf2 super
\f1\b0 \cf4 .\cf9 init\cf4 ()\
        \cf10 centralManager\cf4  = \cf6 CBCentralManager\cf4 (\cf9 delegate\cf4 : 
\f0\b \cf2 self
\f1\b0 \cf4 , \cf9 queue\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 startScanning\cf4 () \{\
        
\f0\b \cf2 if
\f1\b0 \cf4  \cf10 centralManager\cf4 .\cf11 state\cf4  == .\cf11 poweredOn\cf4  \{\
            \cf10 discoveredPeripherals\cf4 .\cf9 removeAll\cf4 ()\
            \cf10 centralManager\cf4 .\cf9 scanForPeripherals\cf4 (\cf9 withServices\cf4 : [\cf6 CBUUID\cf4 (\cf9 string\cf4 : \cf12 "180D"\cf4 )], \cf9 options\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
        \} 
\f0\b \cf2 else
\f1\b0 \cf4  \{\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u10060 
\f1  BLE not available"\cf4 )\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 centralManagerDidUpdateState\cf4 (\cf8 _\cf4  central: \cf6 CBCentralManager\cf4 ) \{\
        
\f0\b \cf2 if
\f1\b0 \cf4  central.\cf11 state\cf4  == .\cf11 poweredOn\cf4  \{\
            \cf13 startScanning\cf4 ()\
        \} 
\f0\b \cf2 else
\f1\b0 \cf4  \{\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u10060 
\f1  BLE not available"\cf4 )\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 centralManager\cf4 (\cf8 _\cf4  central: \cf6 CBCentralManager\cf4 , \cf8 didDiscover\cf4  peripheral: \cf6 CBPeripheral\cf4 , \cf8 advertisementData\cf4 : [\cf7 String\cf4 : 
\f0\b \cf2 Any
\f1\b0 \cf4 ], \cf8 rssi\cf4  RSSI: \cf6 NSNumber\cf4 ) \{\
        
\f0\b \cf2 if
\f1\b0 \cf4  !\cf10 discoveredPeripherals\cf4 .\cf9 contains\cf4 (\cf9 where\cf4 : \{ $0.\cf11 identifier\cf4  == peripheral.\cf11 identifier\cf4  \}) \{\
            \cf10 discoveredPeripherals\cf4 .\cf9 append\cf4 (peripheral)\
            peripheral.\cf11 delegate\cf4  = 
\f0\b \cf2 self
\f1\b0 \cf4 \
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 connectToPeripheral\cf4 (\cf8 _\cf4  peripheral: \cf6 CBPeripheral\cf4 ) \{\
        
\f0\b \cf2 if
\f1\b0 \cf4  \cf10 connectedPeripherals\cf4 .\cf11 count\cf4  < \cf14 \cb3 2\cf4 \cb3  \{\
            \cf10 centralManager\cf4 .\cf9 connect\cf4 (peripheral, \cf9 options\cf4 : 
\f0\b \cf2 nil
\f1\b0 \cf4 )\
        \} 
\f0\b \cf2 else
\f1\b0 \cf4  \{\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u9888 \u65039 
\f1  Already connected to two devices"\cf4 )\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 centralManager\cf4 (\cf8 _\cf4  central: \cf6 CBCentralManager\cf4 , \cf8 didConnect\cf4  peripheral: \cf6 CBPeripheral\cf4 ) \{\
        \cf10 isConnected\cf4  = 
\f0\b \cf2 true
\f1\b0 \cf4 \
        \cf10 connectedPeripherals\cf4 .\cf9 append\cf4 (peripheral)\
        peripheral.\cf9 discoverServices\cf4 ([\cf6 CBUUID\cf4 (\cf9 string\cf4 : \cf12 "180D"\cf4 )])\
        \cf9 print\cf4 (\cf12 "
\f2 \uc0\u9989 
\f1  Connected to \cf4 \\(peripheral.\cf11 name\cf4  ?? \cf12 "Device"\cf4 )\cf12 "\cf4 )\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 peripheral\cf4 (\cf8 _\cf4  peripheral: \cf6 CBPeripheral\cf4 , \cf8 didDiscoverServices\cf4  error: \cf7 Error\cf4 ?) \{\
        
\f0\b \cf2 guard
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  services = peripheral.\cf11 services\cf4  
\f0\b \cf2 else
\f1\b0 \cf4  \{ 
\f0\b \cf2 return
\f1\b0 \cf4  \}\
        
\f0\b \cf2 for
\f1\b0 \cf4  service 
\f0\b \cf2 in
\f1\b0 \cf4  services \{\
            peripheral.\cf9 discoverCharacteristics\cf4 ([\cf6 CBUUID\cf4 (\cf9 string\cf4 : \cf12 "2A5B"\cf4 )], \cf9 for\cf4 : service)\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 peripheral\cf4 (\cf8 _\cf4  peripheral: \cf6 CBPeripheral\cf4 , \cf8 didDiscoverCharacteristicsFor\cf4  service: \cf6 CBService\cf4 , \cf8 error\cf4 : \cf7 Error\cf4 ?) \{\
        
\f0\b \cf2 guard
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  characteristics = service.\cf11 characteristics\cf4  
\f0\b \cf2 else
\f1\b0 \cf4  \{ 
\f0\b \cf2 return
\f1\b0 \cf4  \}\
        
\f0\b \cf2 for
\f1\b0 \cf4  characteristic 
\f0\b \cf2 in
\f1\b0 \cf4  characteristics \{\
            
\f0\b \cf2 if
\f1\b0 \cf4  characteristic.\cf11 uuid\cf4  == \cf6 CBUUID\cf4 (\cf9 string\cf4 : \cf12 "2A5B"\cf4 ) \{\
                \cf10 pianoCharacteristics\cf4 [peripheral] = characteristic\
                peripheral.\cf9 setNotifyValue\cf4 (
\f0\b \cf2 true
\f1\b0 \cf4 , \cf9 for\cf4 : characteristic)\
                \cf9 print\cf4 (\cf12 "
\f2 \uc0\u55356 \u57269 
\f1  Piano Characteristic Found for \cf4 \\(peripheral.\cf11 name\cf4  ?? \cf12 "Device"\cf4 )\cf12 "\cf4 )\
            \}\
        \}\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 peripheral\cf4 (\cf8 _\cf4  peripheral: \cf6 CBPeripheral\cf4 , \cf8 didUpdateValueFor\cf4  characteristic: \cf6 CBCharacteristic\cf4 , \cf8 error\cf4 : \cf7 Error\cf4 ?) \{\
        
\f0\b \cf2 guard
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  data = characteristic.\cf11 value\cf4 , 
\f0\b \cf2 let
\f1\b0 \cf4  note = \cf7 String\cf4 (\cf9 data\cf4 : data, \cf9 encoding\cf4 : .\cf11 utf8\cf4 ) 
\f0\b \cf2 else
\f1\b0 \cf4  \{ 
\f0\b \cf2 return
\f1\b0 \cf4  \}\
        \cf9 print\cf4 (\cf12 "
\f2 \uc0\u55356 \u57273 
\f1  Piano Note Received from \cf4 \\(peripheral.\cf11 name\cf4  ?? \cf12 "Device"\cf4 )\cf12 : \cf4 \\(note)\cf12 "\cf4 )\
        \cf13 playPianoSound\cf4 (note)\
    \}\
\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 startPianoMode\cf4 () \{\
        \cf9 print\cf4 (\cf12 "
\f2 \uc0\u55356 \u57273 
\f1  Piano mode activated"\cf4 )\
    \}\
\
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 playPianoSound\cf4 (\cf8 _\cf4  note: \cf7 String\cf4 ) \{\
        \cf13 playSound\cf4 (\cf13 fileName\cf4 : note)\
    \}\
\
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 func
\f1\b0 \cf4  \cf8 playSound\cf4 (\cf8 fileName\cf4 : \cf7 String\cf4 ) \{\
        
\f0\b \cf2 guard
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  url = \cf6 Bundle\cf4 .\cf11 main\cf4 .\cf9 url\cf4 (\cf9 forResource\cf4 : fileName, \cf9 withExtension\cf4 : \cf12 "mp3"\cf4 ) 
\f0\b \cf2 else
\f1\b0 \cf4  \{\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u10060 
\f1  Sound file not found: \cf4 \\(fileName)\cf12 .mp3"\cf4 )\
            
\f0\b \cf2 return
\f1\b0 \cf4 \
        \}\
\
        
\f0\b \cf2 do
\f1\b0 \cf4  \{\
            \cf10 audioPlayer\cf4  = 
\f0\b \cf2 try
\f1\b0 \cf4  \cf6 AVAudioPlayer\cf4 (\cf9 contentsOf\cf4 : url)\
            \cf10 audioPlayer\cf4 ?.\cf9 play\cf4 ()\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u55357 \u56586 
\f1  Playing: \cf4 \\(fileName)\cf12 .mp3"\cf4 )\
        \} 
\f0\b \cf2 catch
\f1\b0 \cf4  \{\
            \cf9 print\cf4 (\cf12 "
\f2 \uc0\u10060 
\f1  Failed to play sound: \cf4 \\(error)\cf12 "\cf4 )\
        \}\
    \}\
\}\
}